# This workflow will deploy source code on Cloud Run when a commit is pushed to
# the "main" branch.
#
# To configure this workflow:
#
# 1. Enable the following Google Cloud APIs:
#
#    - Artifact Registry (artifactregistry.googleapis.com)
#    - Cloud Build (cloudbuild.googleapis.com)
#    - Cloud Run (run.googleapis.com)
#    - IAM Credentials API (iamcredentials.googleapis.com)
#
#    You can learn more about enabling APIs at
#    https://support.google.com/googleapi/answer/6158841.
#
# 2. Create and configure a Workload Identity Provider for GitHub:
#    https://github.com/google-github-actions/auth#preferred-direct-workload-identity-federation.
#
#    Depending on how you authenticate, you will need to grant an IAM principal
#    permissions on Google Cloud:
#
#    - Artifact Registry Administrator (roles/artifactregistry.admin)
#    - Cloud Run Source Developer (roles/run.sourceDeveloper)
#
#    You can learn more about setting IAM permissions at
#    https://cloud.google.com/iam/docs/manage-access-other-resources.
#
# 3. Change the values in the "env" block to match your values.

name: 'Deploy to Cloud Run from Source'

on:
  push:
    branches:
      - main

env:
  PROJECT_ID: 'demystifier-ai' # Your Google Cloud project ID
  REGION: 'asia-south1' # Your deployment region
  BACKEND_SERVICE: 'legal-backend' # Your Cloud Run backend service name
  FRONTEND_SERVICE: 'legal-frontend' # Your Cloud Run frontend service name

jobs:
  deploy:
    runs-on: 'ubuntu-latest'
    timeout-minutes: 45

    permissions:
      contents: 'read'
      id-token: 'write'

    steps:
      - name: 'Checkout'
        uses: 'actions/checkout@692973e3d937129bcbf40652eb9f2f61becf3332' # actions/checkout@v4

      # Configure Workload Identity Federation and generate an access token.
      #
      # See https://github.com/google-github-actions/auth for more options,
      # including authenticating via a JSON credentials file.
      - id: 'auth'
        name: 'Authenticate to Google Cloud'
        uses: 'google-github-actions/auth@f112390a2df9932162083945e46d439060d66ec2' # google-github-actions/auth@v2
        with:
          workload_identity_provider: 'projects/144935064473/locations/global/workloadIdentityPools/github-actions/providers/github'
          service_account: 'github-actions@demystifier-ai.iam.gserviceaccount.com'

      - name: 'Set up Cloud SDK'
        uses: 'google-github-actions/setup-gcloud@v2'

      - name: 'Deploy Backend to Cloud Run'
        id: 'deploy-backend'
        timeout-minutes: 20
        run: |
          gcloud run deploy ${{ env.BACKEND_SERVICE }} \
            --source ./backend \
            --region ${{ env.REGION }} \
            --platform managed \
            --allow-unauthenticated \
            --port 8080 \
            --cpu 1 \
            --memory 1Gi \
            --max-instances 10 \
            --timeout 900 \
            --set-env-vars PYTHONPATH=/app

      - name: 'Get Backend URL'
        id: 'get-backend-url'
        run: |
          BACKEND_URL=$(gcloud run services describe ${{ env.BACKEND_SERVICE }} --region=${{ env.REGION }} --format="value(status.url)")
          echo "BACKEND_URL=$BACKEND_URL" >> $GITHUB_OUTPUT
          echo "Backend URL: $BACKEND_URL"

      - name: 'Deploy Frontend to Cloud Run'
        id: 'deploy-frontend'
        timeout-minutes: 20
        run: |
          gcloud run deploy ${{ env.FRONTEND_SERVICE }} \
            --source ./frontend \
            --region ${{ env.REGION }} \
            --platform managed \
            --allow-unauthenticated \
            --port 3000 \
            --cpu 1 \
            --memory 1Gi \
            --max-instances 10 \
            --timeout 900 \
            --set-env-vars NEXT_PUBLIC_API_URL=${{ steps.get-backend-url.outputs.BACKEND_URL }},NODE_ENV=production

      - name: 'Get Frontend URL'
        id: 'get-frontend-url'
        run: |
          FRONTEND_URL=$(gcloud run services describe ${{ env.FRONTEND_SERVICE }} --region=${{ env.REGION }} --format="value(status.url)")
          echo "FRONTEND_URL=$FRONTEND_URL" >> $GITHUB_OUTPUT
          echo "Frontend URL: $FRONTEND_URL"

      # If required, use the Cloud Run URL output in later steps
      - name: 'Show output'
        run: |-
          echo "Backend URL: ${{ steps.get-backend-url.outputs.BACKEND_URL }}"
          echo "Frontend URL: ${{ steps.get-frontend-url.outputs.FRONTEND_URL }}"
